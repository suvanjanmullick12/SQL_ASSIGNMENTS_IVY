create database case_harry;

use case_harry;

-- What is View - Virtual table
-- It allows you to save the query into the database a view
-- This view then can be used as any other table.

/*Tasks that we'll perform in this case:
1. We'll create a view as step1 with the following columns:
ID | Age | Coins_Needed | Power

This view should have the data sorted in descending order by
Power first and then by Age in desc order. IDeally, it should
show 14 rows.

2. Then, we'll only show the wand which takes the least coins_needed
among the same Power and the same age wands.
*/

-- Step1:
select w.id, wp.age, w.coins_needed, w.power
from wands w inner join wands_property wp on w.code = wp.code
where is_evil = 0
order by w.power desc, wp.age desc, w.coins_needed asc;

-- save the above query as a View
create view step1 as
(     select w.id, wp.age, w.coins_needed, w.power
    from wands w inner join wands_property wp on w.code = wp.code
    where is_evil = 0
    order by w.power desc, wp.age desc, w.coins_needed asc
);

-- Step2: Only show those wands that require the minimum coins_needed
-- among the wands that have same power and age.
select *
from step1 as a
where not exists (
        select * from step1 as b
        where b.power = a.power and b.age = a.age and
                b.coins_needed < a.coins_needed);
-- This is the ANSWER!

-- using CTE:
with step1 as
(     select w.id, wp.age, w.coins_needed, w.power
    from wands w inner join wands_property wp on w.code = wp.code
    where is_evil = 0
    order by w.power desc, wp.age desc, w.coins_needed asc
)
select *
from step1 as a
where not exists (
        select * from step1 as b
        where b.power = a.power and b.age = a.age and
                b.coins_needed < a.coins_needed);

-- ----------------------------------
-- The same query can also be done without creating a view or CTE
-- in one step. But try this only if you've understood the above
-- two steps process.
-- This one step query considers the fact that there is a different
-- code for each age in the wands_property table.
-- ----------------------------------                
SELECT w.id, age, w.coins_needed, w.power
FROM wands_property AS wp inner join Wands AS w on wp.code = w.code
WHERE wp.is_evil=0 and w.coins_needed=(select min(w1.coins_needed) from wands w1 where
w.power=w1.power and w.code=w1.code)
ORDER BY power DESC , age DESC;